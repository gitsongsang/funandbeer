{
  "components": {
    "comp-custom-training-job": {
      "executorLabel": "exec-custom-training-job",
      "inputDefinitions": {
        "parameters": {
          "base_output_directory": {
            "parameterType": "STRING"
          },
          "display_name": {
            "parameterType": "STRING"
          },
          "location": {
            "parameterType": "STRING"
          },
          "project": {
            "parameterType": "STRING"
          },
          "worker_pool_specs": {
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-endpoint-create": {
      "executorLabel": "exec-endpoint-create",
      "inputDefinitions": {
        "parameters": {
          "display_name": {
            "parameterType": "STRING"
          },
          "project": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "endpoint": {
            "artifactType": {
              "schemaTitle": "google.VertexEndpoint",
              "schemaVersion": "0.0.1"
            }
          }
        },
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-getbesthyperparametersop": {
      "executorLabel": "exec-getbesthyperparametersop",
      "inputDefinitions": {
        "parameters": {
          "study_spec_metrics": {
            "parameterType": "LIST"
          },
          "trials": {
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "LIST"
          }
        }
      }
    },
    "comp-gettrialsop": {
      "executorLabel": "exec-gettrialsop",
      "inputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "LIST"
          }
        }
      }
    },
    "comp-getworkerpoolspecsop": {
      "executorLabel": "exec-getworkerpoolspecsop",
      "inputDefinitions": {
        "parameters": {
          "best_hyperparameters": {
            "parameterType": "LIST"
          },
          "worker_pool_specs": {
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "Output": {
            "parameterType": "LIST"
          }
        }
      }
    },
    "comp-hyperparameter-tuning-job": {
      "executorLabel": "exec-hyperparameter-tuning-job",
      "inputDefinitions": {
        "parameters": {
          "base_output_directory": {
            "parameterType": "STRING"
          },
          "display_name": {
            "parameterType": "STRING"
          },
          "location": {
            "parameterType": "STRING"
          },
          "max_trial_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "parallel_trial_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "project": {
            "parameterType": "STRING"
          },
          "study_spec_metrics": {
            "parameterType": "LIST"
          },
          "study_spec_parameters": {
            "parameterType": "LIST"
          },
          "worker_pool_specs": {
            "parameterType": "LIST"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-model-deploy": {
      "executorLabel": "exec-model-deploy",
      "inputDefinitions": {
        "artifacts": {
          "endpoint": {
            "artifactType": {
              "schemaTitle": "google.VertexEndpoint",
              "schemaVersion": "0.0.1"
            }
          },
          "model": {
            "artifactType": {
              "schemaTitle": "google.VertexModel",
              "schemaVersion": "0.0.1"
            }
          }
        },
        "parameters": {
          "dedicated_resources_max_replica_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "dedicated_resources_min_replica_count": {
            "parameterType": "NUMBER_INTEGER"
          },
          "deployed_model_display_name": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    },
    "comp-model-upload": {
      "executorLabel": "exec-model-upload",
      "inputDefinitions": {
        "parameters": {
          "artifact_uri": {
            "parameterType": "STRING"
          },
          "display_name": {
            "parameterType": "STRING"
          },
          "project": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "model": {
            "artifactType": {
              "schemaTitle": "google.VertexModel",
              "schemaVersion": "0.0.1"
            }
          }
        },
        "parameters": {
          "gcp_resources": {
            "parameterType": "STRING"
          }
        }
      }
    }
  },
  "defaultPipelineRoot": "gs://qwiklabs-asl-04-5e165f533cac-beer-kfp-artifact-store/pipeline",
  "deploymentSpec": {
    "executors": {
      "exec-custom-training-job": {
        "container": {
          "args": [
            "--type",
            "CustomJob",
            "--payload",
            "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"job_spec\": {\"worker_pool_specs\": {{$.inputs.parameters['worker_pool_specs']}}, \"scheduling\": {\"timeout\": \"\", \"restart_job_on_worker_restart\": \"\"}, \"service_account\": \"\", \"tensorboard\": \"\", \"enable_web_access\": \"\", \"network\": \"\", \"reserved_ip_ranges\": , \"base_output_directory\": {\"output_uri_prefix\": \"{{$.inputs.parameters['base_output_directory']}}\"}}, \"labels\": , \"encryption_spec\": {\"kms_key_name\":\"\"}}",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "{{$.inputs.parameters['location']}}",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.8"
        }
      },
      "exec-endpoint-create": {
        "container": {
          "args": [
            "--type",
            "CreateEndpoint",
            "--payload",
            "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"description\": \"\", \"labels\": , \"encryption_spec\": {\"kms_key_name\":\"\"}, \"network\": \"\"}",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}",
            "--executor_input",
            "{{$}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.8"
        }
      },
      "exec-getbesthyperparametersop": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "GetBestHyperparametersOp"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform' 'kfp==1.8.10' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef GetBestHyperparametersOp(trials: list, study_spec_metrics: list) -> list:\n  \"\"\"Retrieves the best hyperparameters based on the trials.\n\n  Args:\n      trials (list): Required. List representing the intermediate\n        JSON representation of the trials from the hyperparameter tuning job.\n      study_spec_metrics (list): Required. List serialized from dictionary\n        representing the metrics to optimize.\n        The dictionary key is the metric_id, which is reported by your training\n        job, and the dictionary value is the optimization goal of the metric\n        ('minimize' or 'maximize'). example:\n        metrics = hyperparameter_tuning_job.serialize_metrics(\n            {'loss': 'minimize', 'accuracy': 'maximize'})\n\n  Returns:\n      List representing the intermediate JSON representation of the best\n      hyperparameters from the best trial in the list of trials.\n\n  Raises:\n      RuntimeError: If there are multiple metrics.\n  \"\"\"\n  from google.cloud.aiplatform_v1.types import study\n\n  if len(study_spec_metrics) > 1:\n    raise RuntimeError('Unable to determine best parameters for multi-objective'\n                       ' hyperparameter tuning.')\n  trials_list = [study.Trial.from_json(trial) for trial in trials]\n  best_trial = None\n  goal = study_spec_metrics[0]['goal']\n  best_fn = None\n  if goal == study.StudySpec.MetricSpec.GoalType.MAXIMIZE:\n    best_fn = max\n  elif goal == study.StudySpec.MetricSpec.GoalType.MINIMIZE:\n    best_fn = min\n  best_trial = best_fn(\n      trials_list, key=lambda trial: trial.final_measurement.metrics[0].value)\n\n  return [\n      study.Trial.Parameter.to_json(param) for param in best_trial.parameters\n  ]\n\n"
          ],
          "image": "python:3.7"
        }
      },
      "exec-gettrialsop": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "GetTrialsOp"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform' 'google-cloud-pipeline-components' 'protobuf' 'kfp==1.8.10' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef GetTrialsOp(gcp_resources: str) -> list:\n  \"\"\"Retrieves the best trial from the trials.\n\n  Args:\n      gcp_resources (str): Proto tracking the hyperparameter tuning job.\n\n  Returns:\n      List of strings representing the intermediate JSON representation of the\n      trials from the hyperparameter tuning job.\n  \"\"\"\n  from google.cloud import aiplatform\n  from google_cloud_pipeline_components.proto.gcp_resources_pb2 import GcpResources\n  from google.protobuf.json_format import Parse\n  from google.cloud.aiplatform_v1.types import study\n\n  api_endpoint_suffix = '-aiplatform.googleapis.com'\n  gcp_resources_proto = Parse(gcp_resources, GcpResources())\n  gcp_resources_split = gcp_resources_proto.resources[0].resource_uri.partition(\n      'projects')\n  resource_name = gcp_resources_split[1] + gcp_resources_split[2]\n  prefix_str = gcp_resources_split[0]\n  prefix_str = prefix_str[:prefix_str.find(api_endpoint_suffix)]\n  api_endpoint = prefix_str[(prefix_str.rfind('//') + 2):] + api_endpoint_suffix\n\n  client_options = {'api_endpoint': api_endpoint}\n  job_client = aiplatform.gapic.JobServiceClient(client_options=client_options)\n  response = job_client.get_hyperparameter_tuning_job(name=resource_name)\n\n  return [study.Trial.to_json(trial) for trial in response.trials]\n\n"
          ],
          "image": "python:3.7"
        }
      },
      "exec-getworkerpoolspecsop": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "GetWorkerPoolSpecsOp"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet     --no-warn-script-location 'google-cloud-aiplatform' 'kfp==1.8.10' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\npython3 -m kfp.v2.components.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp.v2 import dsl\nfrom kfp.v2.dsl import *\nfrom typing import *\n\ndef GetWorkerPoolSpecsOp(best_hyperparameters: list,\n                         worker_pool_specs: list) -> list:\n  \"\"\"Constructs worker_pool_specs based on the best hyperparameters.\n\n  Args:\n      best_hyperparameters (list): Required. List representing the intermediate\n        JSON representation of the best hyperparameters from the\n        hyperparameter tuning job.\n      worker_pool_specs (list): Required. The spec of the worker pools\n        including machine type and Docker image. All worker pools except the\n        first one are optional and can be skipped by providing an empty value.\n\n  Returns:\n      List containing an intermediate JSON representation of the\n      worker_pool_specs updated with the best hyperparameters as arguments\n      in the container_spec.\n\n  \"\"\"\n  from google.cloud.aiplatform_v1.types import study\n\n  for worker_pool_spec in worker_pool_specs:\n    if 'args' not in worker_pool_spec['container_spec']:\n      worker_pool_spec['container_spec']['args'] = []\n    for param in best_hyperparameters:\n      p = study.Trial.Parameter.from_json(param)\n      worker_pool_spec['container_spec']['args'].append(\n          f'--{p.parameter_id}={p.value}')\n\n  return worker_pool_specs\n\n"
          ],
          "image": "python:3.7"
        }
      },
      "exec-hyperparameter-tuning-job": {
        "container": {
          "args": [
            "--type",
            "HyperparameterTuningJob",
            "--payload",
            "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"study_spec\": {\"metrics\": {{$.inputs.parameters['study_spec_metrics']}}, \"parameters\": {{$.inputs.parameters['study_spec_parameters']}}, \"algorithm\": \"\", \"measurement_selection_type\": \"\"}, \"max_trial_count\": {{$.inputs.parameters['max_trial_count']}}, \"parallel_trial_count\": {{$.inputs.parameters['parallel_trial_count']}}, \"max_failed_trial_count\": , \"trial_job_spec\": {\"worker_pool_specs\": {{$.inputs.parameters['worker_pool_specs']}}, \"service_account\": \"\", \"network\": \"\", \"base_output_directory\": {\"output_uri_prefix\": \"{{$.inputs.parameters['base_output_directory']}}\"}}, \"encryption_spec\": {\"kms_key_name\":\"\"}}",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "{{$.inputs.parameters['location']}}",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.8"
        }
      },
      "exec-model-deploy": {
        "container": {
          "args": [
            "--type",
            "DeployModel",
            "--payload",
            "{\"endpoint\": \"{{$.inputs.artifacts['endpoint'].metadata['resourceName']}}\", \"traffic_split\": , \"deployed_model\": {\"model\": \"{{$.inputs.artifacts['model'].metadata['resourceName']}}\", \"dedicated_resources\": {\"machine_spec\": {\"machine_type\": \"\", \"accelerator_type\": \"\", \"accelerator_count\": }, \"min_replica_count\": {{$.inputs.parameters['dedicated_resources_min_replica_count']}}, \"max_replica_count\": {{$.inputs.parameters['dedicated_resources_max_replica_count']}}}, \"automatic_resources\": {\"min_replica_count\": , \"max_replica_count\": }, \"service_account\": \"\", \"disable_container_logging\": , \"enable_access_logging\": , \"explanation_spec\": {\"parameters\": , \"metadata\": }}}",
            "--project",
            "",
            "--location",
            "",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.8"
        }
      },
      "exec-model-upload": {
        "container": {
          "args": [
            "--type",
            "UploadModel",
            "--payload",
            "{\"display_name\": \"{{$.inputs.parameters['display_name']}}\", \"description\": \"\", \"predict_schemata\": {\"instance_schema_uri\": \"\", \"parameters_schema_uri\": \"\", \"prediction_schema_uri\": \"\"}, \"container_spec\": {\"image_uri\": \"\", \"command\": , \"args\": , \"env\": , \"ports\": , \"predict_route\": \"\", \"health_route\": \"\"}, \"artifact_uri\": \"{{$.inputs.parameters['artifact_uri']}}\", \"explanation_spec\": {\"parameters\": , \"metadata\": }, \"encryption_spec\": {\"kms_key_name\":\"\"}, \"labels\": }",
            "--project",
            "{{$.inputs.parameters['project']}}",
            "--location",
            "--gcp_resources",
            "{{$.outputs.parameters['gcp_resources'].output_file}}",
            "--executor_input",
            "{{$}}"
          ],
          "command": [
            "python3",
            "-u",
            "-m",
            "google_cloud_pipeline_components.container.v1.gcp_launcher.launcher"
          ],
          "image": "gcr.io/ml-pipeline/google-cloud-pipeline-components:1.0.8"
        }
      }
    }
  },
  "pipelineInfo": {
    "name": "beer-kfp-pipeline"
  },
  "root": {
    "dag": {
      "tasks": {
        "custom-training-job": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-custom-training-job"
          },
          "dependentTasks": [
            "getworkerpoolspecsop"
          ],
          "inputs": {
            "parameters": {
              "base_output_directory": {
                "runtimeValue": {
                  "constant": "gs://qwiklabs-asl-04-5e165f533cac-beer-kfp-artifact-store/pipeline"
                }
              },
              "display_name": {
                "runtimeValue": {
                  "constant": "beer-kfp-training-job"
                }
              },
              "location": {
                "runtimeValue": {
                  "constant": "us-east1"
                }
              },
              "project": {
                "runtimeValue": {
                  "constant": "qwiklabs-asl-04-5e165f533cac"
                }
              },
              "worker_pool_specs": {
                "taskOutputParameter": {
                  "outputParameterKey": "Output",
                  "producerTask": "getworkerpoolspecsop"
                }
              }
            }
          },
          "taskInfo": {
            "name": "custom-training-job"
          }
        },
        "endpoint-create": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-endpoint-create"
          },
          "dependentTasks": [
            "model-upload"
          ],
          "inputs": {
            "parameters": {
              "display_name": {
                "runtimeValue": {
                  "constant": "beer-kfp-create-endpoint-job"
                }
              },
              "project": {
                "runtimeValue": {
                  "constant": "qwiklabs-asl-04-5e165f533cac"
                }
              }
            }
          },
          "taskInfo": {
            "name": "endpoint-create"
          }
        },
        "getbesthyperparametersop": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-getbesthyperparametersop"
          },
          "dependentTasks": [
            "gettrialsop"
          ],
          "inputs": {
            "parameters": {
              "study_spec_metrics": {
                "runtimeValue": {
                  "constant": [
                    {
                      "goal": 1.0,
                      "metric_id": "map_at_10"
                    }
                  ]
                }
              },
              "trials": {
                "taskOutputParameter": {
                  "outputParameterKey": "Output",
                  "producerTask": "gettrialsop"
                }
              }
            }
          },
          "taskInfo": {
            "name": "getbesthyperparametersop"
          }
        },
        "gettrialsop": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-gettrialsop"
          },
          "dependentTasks": [
            "hyperparameter-tuning-job"
          ],
          "inputs": {
            "parameters": {
              "gcp_resources": {
                "taskOutputParameter": {
                  "outputParameterKey": "gcp_resources",
                  "producerTask": "hyperparameter-tuning-job"
                }
              }
            }
          },
          "taskInfo": {
            "name": "gettrialsop"
          }
        },
        "getworkerpoolspecsop": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-getworkerpoolspecsop"
          },
          "dependentTasks": [
            "getbesthyperparametersop"
          ],
          "inputs": {
            "parameters": {
              "best_hyperparameters": {
                "taskOutputParameter": {
                  "outputParameterKey": "Output",
                  "producerTask": "getbesthyperparametersop"
                }
              },
              "worker_pool_specs": {
                "runtimeValue": {
                  "constant": [
                    {
                      "container_spec": {
                        "image_uri": "gcr.io/qwiklabs-asl-04-5e165f533cac/trainer_image_beer_vertex:latest"
                      },
                      "machine_spec": {
                        "machine_type": "n1-standard-16"
                      },
                      "replica_count": 1.0
                    }
                  ]
                }
              }
            }
          },
          "taskInfo": {
            "name": "getworkerpoolspecsop"
          }
        },
        "hyperparameter-tuning-job": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-hyperparameter-tuning-job"
          },
          "inputs": {
            "parameters": {
              "base_output_directory": {
                "runtimeValue": {
                  "constant": "gs://qwiklabs-asl-04-5e165f533cac-beer-kfp-artifact-store/pipeline"
                }
              },
              "display_name": {
                "runtimeValue": {
                  "constant": "beer-kfp-tuning-job"
                }
              },
              "location": {
                "runtimeValue": {
                  "constant": "us-east1"
                }
              },
              "max_trial_count": {
                "runtimeValue": {
                  "constant": 5.0
                }
              },
              "parallel_trial_count": {
                "runtimeValue": {
                  "constant": 5.0
                }
              },
              "project": {
                "runtimeValue": {
                  "constant": "qwiklabs-asl-04-5e165f533cac"
                }
              },
              "study_spec_metrics": {
                "runtimeValue": {
                  "constant": [
                    {
                      "goal": 1.0,
                      "metric_id": "map_at_10"
                    }
                  ]
                }
              },
              "study_spec_parameters": {
                "runtimeValue": {
                  "constant": [
                    {
                      "conditional_parameter_specs": [],
                      "double_value_spec": {
                        "max_value": 0.1,
                        "min_value": 0.0001
                      },
                      "parameter_id": "regularization",
                      "scale_type": 2.0
                    },
                    {
                      "conditional_parameter_specs": [],
                      "discrete_value_spec": {
                        "values": [
                          16.0,
                          32.0,
                          64.0
                        ]
                      },
                      "parameter_id": "factors",
                      "scale_type": 1.0
                    },
                    {
                      "conditional_parameter_specs": [],
                      "integer_value_spec": {
                        "max_value": "100",
                        "min_value": "10"
                      },
                      "parameter_id": "iterations",
                      "scale_type": 1.0
                    }
                  ]
                }
              },
              "worker_pool_specs": {
                "runtimeValue": {
                  "constant": [
                    {
                      "container_spec": {
                        "image_uri": "gcr.io/qwiklabs-asl-04-5e165f533cac/trainer_image_beer_vertex:latest"
                      },
                      "machine_spec": {
                        "accelerator_count": 1.0,
                        "accelerator_type": "NVIDIA_TESLA_T4",
                        "machine_type": "n1-standard-4"
                      },
                      "replica_count": 1.0
                    }
                  ]
                }
              }
            }
          },
          "taskInfo": {
            "name": "hyperparameter-tuning-job"
          }
        },
        "model-deploy": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-model-deploy"
          },
          "dependentTasks": [
            "endpoint-create",
            "model-upload"
          ],
          "inputs": {
            "artifacts": {
              "endpoint": {
                "taskOutputArtifact": {
                  "outputArtifactKey": "endpoint",
                  "producerTask": "endpoint-create"
                }
              },
              "model": {
                "taskOutputArtifact": {
                  "outputArtifactKey": "model",
                  "producerTask": "model-upload"
                }
              }
            },
            "parameters": {
              "dedicated_resources_max_replica_count": {
                "runtimeValue": {
                  "constant": 1.0
                }
              },
              "dedicated_resources_min_replica_count": {
                "runtimeValue": {
                  "constant": 1.0
                }
              },
              "deployed_model_display_name": {
                "runtimeValue": {
                  "constant": "beer"
                }
              }
            }
          },
          "taskInfo": {
            "name": "model-deploy"
          }
        },
        "model-upload": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-model-upload"
          },
          "dependentTasks": [
            "custom-training-job"
          ],
          "inputs": {
            "parameters": {
              "artifact_uri": {
                "runtimeValue": {
                  "constant": "gs://qwiklabs-asl-04-5e165f533cac-beer-kfp-artifact-store/pipeline/model"
                }
              },
              "display_name": {
                "runtimeValue": {
                  "constant": "beer-kfp-model-upload-job"
                }
              },
              "project": {
                "runtimeValue": {
                  "constant": "qwiklabs-asl-04-5e165f533cac"
                }
              }
            }
          },
          "taskInfo": {
            "name": "model-upload"
          }
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-1.8.10"
}